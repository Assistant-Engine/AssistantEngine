@page "/Error"
<PageTitle>Error</PageTitle>

@if (IsWebOrWindows)
{
    <h1 class="text-danger">Error.</h1>
    <h2 class="text-danger">An error occurred while processing your request.</h2>

    @if (ShowRequestId)
    {
        <p><strong>Request ID:</strong> <code>@RequestId</code></p>
    }

    <h3>Development Mode</h3>
    <p>Swapping to <strong>Development</strong> displays more detail.</p>
}
else
{
    <ErrorBoundary>
        <ChildContent>
            <h3>Something went wrong.</h3>
            <p>Please retry your last action.</p>
        </ChildContent>
        <ErrorContent Context="err">
            <h3>Error</h3>
            <pre>@err?.Message</pre>
        </ErrorContent>
    </ErrorBoundary>
}

@code {
    // Compile-time constant to pick markup branch
    private const bool IsWebOrWindows =
#if WINDOWS || WEB
        true;
#else
        false;
#endif

#if WINDOWS || WEB
    [Microsoft.AspNetCore.Components.CascadingParameter]
    private Microsoft.AspNetCore.Http.HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = System.Diagnostics.Activity.Current?.Id ?? HttpContext?.TraceIdentifier;
#else
    private string? RequestId => null;
    private bool ShowRequestId => false;
#endif
}
